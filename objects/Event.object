<?xml version="1.0" encoding="UTF-8"?>
<CustomObject xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionOverrides>
        <actionName>Accept</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>CancelEdit</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Clone</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Decline</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Delete</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>DeleteSeries</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Edit</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>NewEvent</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>NewSfdcEvent</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>SaveEdit</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>Today</actionName>
        <type>Default</type>
    </actionOverrides>
    <actionOverrides>
        <actionName>View</actionName>
        <type>Default</type>
    </actionOverrides>
    <compactLayoutAssignment>SYSTEM</compactLayoutAssignment>
    <enableFeeds>false</enableFeeds>
    <fields>
        <fullName>ActivityDate</fullName>
    </fields>
    <fields>
        <fullName>ActivityDateTime</fullName>
    </fields>
    <fields>
        <fullName>Description</fullName>
    </fields>
    <fields>
        <fullName>DurationInMinutes</fullName>
    </fields>
    <fields>
        <fullName>Email</fullName>
    </fields>
    <fields>
        <fullName>EndDateTime</fullName>
    </fields>
    <fields>
        <fullName>EventSubtype</fullName>
    </fields>
    <fields>
        <fullName>IsAllDayEvent</fullName>
    </fields>
    <fields>
        <fullName>IsPrivate</fullName>
    </fields>
    <fields>
        <fullName>IsReminderSet</fullName>
    </fields>
    <fields>
        <fullName>IsVisibleInSelfService</fullName>
    </fields>
    <fields>
        <fullName>Location</fullName>
    </fields>
    <fields>
        <fullName>OwnerId</fullName>
        <type>Lookup</type>
    </fields>
    <fields>
        <fullName>Phone</fullName>
    </fields>
    <fields>
        <fullName>ShowAs</fullName>
    </fields>
    <fields>
        <fullName>StartDateTime</fullName>
    </fields>
    <fields>
        <fullName>Subject</fullName>
        <type>Picklist</type>
    </fields>
    <fields>
        <fullName>Type</fullName>
        <type>Picklist</type>
    </fields>
    <fields>
        <fullName>WhatId</fullName>
        <type>Lookup</type>
    </fields>
    <fields>
        <fullName>WhoId</fullName>
        <type>Lookup</type>
    </fields>
    <sharingModel>Private</sharingModel>
    <webLinks>
        <fullName>Create_google_Event</fullName>
        <availability>online</availability>
        <description>Create google event</description>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Create google Event</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>var clientId = &apos;738603473059-pmmr07jeh298plf88l303d8gihhsldnu.apps.googleusercontent.com&apos;;
var apiKey = &apos;yPuqJqK1XiOlozGrYI-_7UZl&apos;; 
 
var scopes = &apos;https://www.googleapis.com/auth/calendar&apos;; 
 
// Use a button to handle authentication the first time.
function handleClientLoad() {
gapi.client.setApiKey(apiKey);
window.setTimeout(checkAuth,1);
} 
 
function checkAuth() {
gapi.auth.authorize({client_id: clientId, scope: scopes, immediate: true}, handleAuthResult);
} 
 
function handleAuthResult(authResult) {
// var authorizeButton = document.getElementById(&apos;authorize-button&apos;);
if (authResult &amp;&amp; !authResult.error) { 
 
makeApiCall(); 
 
} else {
handleAuthClick();
}
} 
 
function handleAuthClick() {
gapi.auth.authorize({client_id: clientId, scope: scopes, immediate: false}, handleAuthResult);
return false;
} 
 
// Load the API and make an API call. Display the results on the screen.
function makeApiCall() {
AddEvent();
}
function AddEvent()
{
var startdate=&apos;{!YEAR(DATEVALUE(Task.CreatedDate))}&apos; + &apos;-&apos; + &apos;{!MONTH(DATEVALUE(Task.CreatedDate))}&apos; + &apos;-&apos; + &apos;{!DAY(DATEVALUE(Task.CreatedDate))}&apos;;
var enddate=&apos;{!YEAR(Task.ActivityDate)}&apos; + &apos;-&apos; + &apos;{!MONTH(Task.ActivityDate)}&apos; + &apos;-&apos; + &apos;{!DAY(Task.ActivityDate)}&apos;; 
 
var resource = {
&quot;summary&quot;:&quot;Demo s360 summary&quot;,
&quot;description&quot;: &quot;Demo s360 description&quot;,
&quot;start&quot;: {
&quot;date&quot;: startdate
},
&quot;end&quot;: {
&quot;date&quot;: enddate
}
};
gapi.client.load(&apos;calendar&apos;, &apos;v3&apos;, function() {
var request = gapi.client.calendar.events.insert({
&apos;calendarId&apos;: &apos;primary&apos;,
&apos;resource&apos;: resource
});
request.execute(function(resp) {
console.log(resp);
if (resp.id){
alert(&quot;Event was successfully added to the calendar!&quot;);
}
else{
alert(&quot;An error occurred. Please try again later.&quot;)
} 
 
});
}); 
 
}
{!REQUIRESCRIPT(&quot;https://apis.google.com/js/client.js?onload=handleClientLoad&quot;)};
handleClientLoad()</url>
    </webLinks>
</CustomObject>
